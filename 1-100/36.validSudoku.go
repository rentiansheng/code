package main

import "fmt"

func main() {
	board := [][]byte{
		{'5', '3', '.', '.', '7', '.', '.', '.', '.'},
		{'6', '.', '.', '1', '9', '5', '.', '.', '.'},
		{'.', '9', '8', '.', '.', '.', '.', '6', '.'},
		{'8', '.', '.', '.', '6', '.', '.', '.', '3'},
		{'4', '.', '.', '8', '.', '3', '.', '.', '1'},
		{'7', '.', '.', '.', '2', '.', '.', '.', '6'},
		{'.', '6', '.', '.', '.', '.', '2', '8', '.'},
		{'.', '.', '.', '4', '1', '9', '.', '.', '5'},
		{'.', '.', '.', '.', '8', '.', '.', '7', '9'},
	}

	/* 	board = [][]byte{
	   		{'5', '3', '0', '2', '7', '6', '1', '4', '8'},
	   		{'6', '2', '4', '1', '9', '5', '0', '3', '7'},
	   		{'1', '9', '8', '0', '3', '4', '5', '6', '2'},
	   		{'8', '1', '2', '5', '6', '7', '4', '9', '3'},
	   		{'4', '5', '6', '8', '0', '3', '7', '2', '1'},
	   		{'7', '0', '3', '9', '2', '1', '8', '5', '6'},
	   		{'3', '6', '1', '7', '5', '0', '2', '8', '4'},
	   		{'2', '8', '7', '4', '1', '9', '3', '0', '5'},
	   		{'0', '4', '5', '3', '8', '2', '6', '7', '9'},
	   	}
	*/
	fmt.Println("true", isValidSudoku(board))

}

func isValidSudoku(board [][]byte) bool {
	rowArr := [10][10]int{}
	colArr := [10][10]int{}
	sboxArr := [10][10]int{}

	for rowIdx, rows := range board {
		for colIdx, col := range rows {
			if col != '.' {
				intVal := int(col - '0')
				sboxIdx := (rowIdx/3)*3 + colIdx/3
				if rowArr[rowIdx][intVal] == 1 || colArr[colIdx][intVal] == 1 || sboxArr[sboxIdx][intVal] == 1 {
					return false
				}
				rowArr[rowIdx][intVal] = 1
				colArr[colIdx][intVal] = 1
				sboxArr[sboxIdx][intVal] = 1

			}
		}
	}

	return true
}
